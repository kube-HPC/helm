# Default values for hkube.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

clusterName: dev

metadata:
    namespace: default

privteregistry: {}

thirdpartyapps:
  redis-ha: true
  etcd: true

lables:
   group:
     value: hkube
   thirdparty:
     value: "true"
   core:
     value: "true"
   
systemversion: 1.1.267

image:
  pullPolicy: IfNotPresent

api-server:
  service:
    type: ClusterIP
    port: "3000"
  image:
    repository: hkube/api-server
    tag: v1.1.56
  ingress:
    enabled: true
    path: /hkube/api-server
worker:
  service:
    type: ClusterIP
    port: "3000"
  metrics:
    port: 3001
  image:
   repository: hkube/worker
   tag: v1.1.33
pipeline-driver:
  replicaCount: 20
  service:
    type: ClusterIP
    port: "3000"
  image:
    repository: hkube/pipeline-driver
    tag: v1.1.16
algorunner:
  image:
    repository:
    tag: v1.1.4
simulator:
  metrics:
     port: 9050
  service:
    type: ClusterIP
    port: 9050
  ingress:
    enabled: true
    path: /hkube/simulator
  image:
    repository: hkube/simulator
    tag: v1.1.6
webhook-stub-ui:
  service:
    type: ClusterIP
    port: 3002
  image:
    repository: hkube/webhook-stub-ui
    tag: v1.1.2
  ingress:
    enabled: true
    path: /hkube/webhook-stub-ui
  metrics:
    port: 3002
algorithm-example:
  image:
    repository: hkube/algorithm-example
    tag: v1.1.7
deployment:
  image:
    repository: hkube/deployment
    tag: v1.1.35
monitor-server:
  service:
     type: ClusterIP
     port: 30010
  ingress:
    enabled: true
    path: /hkube/monitor-server   
  image:
    repository: hkube/monitor-server
    tag: v1.1.8
algorithm-queue:
  image:
    repository:
    tag: v1.1.16
resource-manager:
   metrics:
     port: 3000
   service:
     type: ClusterIP
     port: 3000
   image:
     repository: hkube/resource-manager
     tag: v1.1.20
task-executor:
  service:
    type: ClusterIP
    port: 3000
  image:
    repository: hkube/task-executor
    tag: v1.1.37
trigger-service:
  service:
    type: ClusterIP
    port: 3000
  image:
    repository: hkube/trigger-service
    tag: v1.1.12
algorithm-queue-svc:
   service:
    type: ClusterIP
    port: "3000"
algorithm-operator:
   service:
     type: ClusterIP
     port: "3000"
   ingress:
     enabled: true
     path: /hkube/
   image:
    repository: hkube/algorithm-operator
    tag: v1.1.9
pipeline-driver-queue:
  replicaCount: 1
  service:
    type: ClusterIP
    port: "3000"
  ingress:
    enabled: true
    path: /hkube/  
  image:
    repository: hkube/pipeline-driver-queue
    tag: v1.1.1
  ingress:
    enabled: true
    path: /hkube/
clean-old-jobs:
   image:
     repository: hkube/clean-old-jobs
     tag: v1.1.1
cpu-load-algorithm:
   image:
     repository: hkube/cpu-load-algorithm
     tag: v1.1.2
busybox:
  image:
    repository: busybox
    tag: latest

env:
  node_env: production
  max_completed_job_age_hours: "1"
  public_url: "/hkube/webhook-stub-ui"
  monitor_backend_path: "/hkube/monitor-server/socket.io"
  interval: "2000"
  hkube_log_level: "0"
  prometheus_endpoint: "http://monitoring-prometheus-server.monitoring:9090/api/v1"
  algorithms_tereshold_cpu: "0.9"
  algorithms_tereshold_mem: "0.9"
  driver_threshold_cpu: "0.1"
  driver_threshold_mem: "1"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
