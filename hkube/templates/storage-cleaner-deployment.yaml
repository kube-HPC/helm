apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: storage-cleaner
  labels:
    group: {{ .Values.lables.group.value }}
    core: "true"
    app: storage-cleaner
spec:

  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      template:
        spec:
{{- if eq .Values.env.default_storage "fs" }}
          volumes:
            - name: storage-volume
              persistentVolumeClaim:
                claimName: hkube-storage-pvc
{{- end }}          
          containers:
          - name: storage-cleaner
            image: "{{ .Values.global.registry }}{{ index  .Values "storage-cleaner" "image" "repository" }}:{{ index .Values "storage-cleaner" "image" "tag" }}"
            resources:
            limits:
              cpu: 100m
              memory: 256Mi
{{- if eq .Values.env.default_storage "fs" }}
            volumeMounts:
              - name: storage-volume
                mountPath: {{ .Values.global.storage.fs.base_directory | quote}}
{{- end }} 
            env:
            - name: "TEMP_OBJECT_EXPIRATION_DAYS"
              valueFrom:
                configMapKeyRef:
                  name: storage-cleaner-configmap
                  key: TEMP_OBJECT_EXPIRATION_DAYS
            - name: "RESULT_OBJECT_EXPIRATION_DAYS"
              valueFrom:
                configMapKeyRef:
                  name: storage-cleaner-configmap
                  key: RESULT_OBJECT_EXPIRATION_DAYS
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: storage-cleaner-configmap
                  key: CLUSTER_NAME
{{- if eq .Values.env.default_storage "fs" }}
            - name: BASE_FS_ADAPTER_DIRECTORY
              valueFrom:
                configMapKeyRef:
                  name: api-server-configmap
                  key: BASE_FS_ADAPTER_DIRECTORY
{{- else if eq .Values.env.default_storage "s3" }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: awsKey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: awsSecret
            - name: S3_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: awsEndpointUrl
{{- end }}  
            - name: DEFAULT_STORAGE
              valueFrom:
                configMapKeyRef:
                  name: storage-cleaner-configmap
                  key: DEFAULT_STORAGE
          restartPolicy: Never
