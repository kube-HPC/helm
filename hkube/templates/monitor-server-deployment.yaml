apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: monitor-server
  labels:
    app: monitor-server
    group: {{ .Values.lables.group.value }}
    core: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitor-server
  template:
    metadata:
      labels:
        app: monitor-server
        group: {{ .Values.lables.group.value }}
    spec:
      {{- if .Values.global.production }}
      nodeSelector:
        core: "true"
      {{- end }} 
      serviceAccountName: monitor-server-serviceaccount
      containers:
        - name: monitor-server
          image: "{{ .Values.global.registry }}{{ index  .Values "monitor-server" "image" "repository" }}:{{ index .Values "monitor-server" "image" "tag" }}"
          resources:
            limits:
              cpu: 250m
              memory: 512Mi
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: monitor-server-configmap
                  key: NODE_ENV
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: monitor-server-configmap
                  key: CLUSTER_NAME
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
{{- if eq .Values.env.default_storage "fs" }}
            - name: BASE_FS_ADAPTER_DIRECTORY
              valueFrom:
                configMapKeyRef:
                  name: monitor-server-configmap
                  key: BASE_FS_ADAPTER_DIRECTORY
{{- else if eq .Values.env.default_storage "s3" }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: awsKey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: awsSecret
            - name: S3_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: awsEndpointUrl
{{- end }}                                    
            - name: DEFAULT_STORAGE
              valueFrom:
                configMapKeyRef:
                  name: monitor-server-configmap
                  key: DEFAULT_STORAGE
          ports:
            - containerPort: 30010
          volumeMounts:
            - name: uploads
              mountPath: /hkube/monitor-server/uploads
            - name: versions-config
              mountPath: /versions
{{- if eq .Values.env.default_storage "fs" }}
            - name: storage-volume
              mountPath: {{ .Values.global.storage.fs.base_directory | quote}}
{{- end }}  
      volumes:
        - name: versions-config
          configMap:
            name: hkube-versions
        - emptyDir: {}
          name: uploads
{{- if eq .Values.env.default_storage "fs" }}
        - name: storage-volume
          persistentVolumeClaim:
            claimName: hkube-storage-pvc
{{- end }}     