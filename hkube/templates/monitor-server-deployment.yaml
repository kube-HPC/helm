apiVersion: apps/v1
kind: Deployment
metadata:
  name: monitor-server
  labels:
    app: monitor-server
    group: {{ .Values.labels.group.value }}
    core: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitor-server
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps/monitor-server-cm.yaml") . | sha256sum }}
      labels:
        app: monitor-server
        group: {{ .Values.labels.group.value }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }} 
      serviceAccountName: monitor-server-serviceaccount
      containers:
        - name: monitor-server
          image: "{{ .Values.global.registry }}{{ index  .Values "monitor_server" "image" "repository" }}:{{ index .Values "monitor_server" "image" "tag" }}"
{{- if .Values.monitor_server.healthcheck.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.monitor_server.healthcheck.path }}
              port: {{ .Values.monitor_server.healthcheck.port }}
            initialDelaySeconds: {{ .Values.monitor_server.healthcheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.monitor_server.healthcheck.periodSeconds }}
            timeoutSeconds: {{ .Values.monitor_server.healthcheck.timeoutSeconds }}
            failureThreshold: {{ .Values.monitor_server.healthcheck.failureThreshold }}
{{- end }}          
          resources:
{{ toYaml .Values.trigger_service.resources | indent 12 }} 
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: monitor-server-configmap
                  key: NODE_ENV
            - name: CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: monitor-server-configmap
                  key: CLUSTER_NAME
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
{{- if eq .Values.env.default_storage "fs" }}
            - name: BASE_FS_ADAPTER_DIRECTORY
              valueFrom:
                configMapKeyRef:
                  name: monitor-server-configmap
                  key: BASE_FS_ADAPTER_DIRECTORY
{{- else if eq .Values.env.default_storage "s3" }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: awsKey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: awsSecret
            - name: S3_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: awsEndpointUrl
{{- end }}                                    
            - name: DEFAULT_STORAGE
              valueFrom:
                configMapKeyRef:
                  name: monitor-server-configmap
                  key: DEFAULT_STORAGE
            - name: STORAGE_ENCODING
              valueFrom:
                configMapKeyRef:
                  name: monitor-server-configmap
                  key: STORAGE_ENCODING                  
            - name: LOG_EXTERNAL_REQUESTS
              value: {{ .Values.monitor_server.env.log_external_requests | quote}}
            - name: ELASTICSEARCH_SERVICE_URL
              value: {{ .Values.monitor_server.env.elasticsearch_service_url | quote}}
            - name: LOGS_VIEW_SOURCE
              value: {{ .Values.monitor_server.env.logs_view_source | quote}}
          ports:
            - containerPort: 30010
          volumeMounts:
            - name: uploads
              mountPath: /hkube/monitor-server/uploads
            - name: versions-config
              mountPath: /versions
{{- if eq .Values.env.default_storage "fs" }}
            - name: storage-volume
              mountPath: {{ .Values.global.storage.fs.base_directory | quote}}
{{- end }}  
      volumes:
        - name: versions-config
          configMap:
            name: hkube-versions
        - emptyDir: {}
          name: uploads
{{- if eq .Values.env.default_storage "fs" }}
        - name: storage-volume
          persistentVolumeClaim:
            claimName: hkube-storage-pvc
{{- end }}     