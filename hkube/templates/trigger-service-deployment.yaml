apiVersion: apps/v1
kind: Deployment
metadata:
  name: trigger-service
  labels:
    app: trigger-service
    scale-group: trigger-service
    group: {{ .Values.labels.group.value }}
    core: "true"
    metrics-group: trigger-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trigger-service
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps/trigger-service-cm.yaml") . | sha256sum }}
      labels:
        app: trigger-service
        group: {{ .Values.labels.group.value }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: trigger-service
          image: "{{ .Values.global.registry }}{{ .Values.trigger_service.image.repository }}:{{ .Values.trigger_service.image.tag }}"
          resources:
{{ toYaml .Values.trigger_service.resources | indent 12 }}          
          ports:
            - containerPort: {{ .Values.trigger_service.env.metric_port }}
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: trigger-service-configmap
                  key: NODE_ENV
            - name: METRICS_PORT
              valueFrom:
                configMapKeyRef:
                  name: trigger-service-configmap
                  key: METRICS_PORT
{{- if .Values.global.isPrivileged }}            
            - name: JAEGER_AGENT_SERVICE_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
{{- else if .Values.jaeger.external_agent_address }}
            - name: JAEGER_AGENT_SERVICE_HOST
              value: .Values.jaeger.external_agent_address
{{- end }}    
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace