apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: api-server
  labels:
    app: api-server
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    group: {{ .Values.lables.group.value }}
    core: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-server
      release: api-server
  template:
    metadata:
      labels:
        app: api-server
        release: api-server
        group: {{ .Values.lables.group.value }}
    spec:
      {{- if .Values.global.production }}
      nodeSelector:
        core: "true"
      {{- end }}
{{- if eq .Values.env.default_storage "fs" }}
      volumes:
        - name: storage-volume
          persistentVolumeClaim:
            claimName: hkube-storage-pvc
{{- end }}                                    
      containers:
        - name: api-server
          image: "{{ .Values.global.registry }}{{ index .Values "api-server" "image" "repository" }}:{{ index .Values "api-server" "image" "tag" }}"
          imagePullPolicy: {{ index .Values "image" "pullPolicy" }}
{{- if eq .Values.env.default_storage "fs" }}
          volumeMounts:
            - name: storage-volume
              mountPath: {{ .Values.global.storage.fs.base_directory | quote}}
{{- end }}                                    
          ports:
            - containerPort: {{ index .Values "api-server" "env" "metric_port" }}
              protocol: TCP
            - containerPort: {{ index .Values "api-server" "env" "port" }}
              protocol: TCP
          env:
            - name: METRICS_PORT
              valueFrom:
                configMapKeyRef:
                  name: api-server-configmap
                  key: METRICS_PORT
            - name: API_SERVER_REST_PORT
              valueFrom:
                configMapKeyRef:
                  name: api-server-configmap
                  key: PORT
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: api-server-configmap
                  key: NODE_ENV
            - name: BASE_URL_PATH
              valueFrom:
                configMapKeyRef:
                  name: api-server-configmap
                  key: BASE_URL_PATH
{{- if eq .Values.env.default_storage "fs" }}
            - name: BASE_FS_ADAPTER_DIRECTORY
              valueFrom:
                configMapKeyRef:
                  name: api-server-configmap
                  key: BASE_FS_ADAPTER_DIRECTORY
{{- else if eq .Values.env.default_storage "s3" }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: awsKey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: awsSecret
            - name: S3_ENDPOINT_URL
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: awsEndpointUrl
{{- end }}                                    
            - name: DEFAULT_STORAGE
              valueFrom:
                configMapKeyRef:
                  name: api-server-configmap
                  key: DEFAULT_STORAGE
            - name: JAEGER_AGENT_SERVICE_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
