{{- if .Values.query.ingress.enabled -}}
{{- $servicePort := .Values.query.service.port -}}
{{- $basePath := .Values.query.basePath -}}
{{- $serviceName := (include "jaeger.query.name" .) -}}
apiVersion:  {{ template "ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ template "jaeger.query.name" . }}
  labels:
    {{- include "jaeger.labels" . | nindent 4 }}
    app.kubernetes.io/component: query
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: {{ .Values.global.ingress.requireTls | quote }}
    nginx.ingress.kubernetes.io/proxy-body-size: {{ .Values.global.ingress.maxBodySize | quote }}
  {{- if .Values.query.ingress.annotations }}
    {{- toYaml .Values.query.ingress.annotations | nindent 4 }}
  {{- end }}
spec:
{{- if eq .Values.global.ingress.class "nginx"}}
  ingressClassName: {{ .Values.global.ingress.class | quote }}
{{- end }}
{{- if .Values.global.ingress.hostname }}
  tls:
  - hosts:
    - {{ .Values.global.ingress.hostname }}
    secretName: {{ template "jaeger.query.name" $ }}-tls-secret
{{- end }}
  rules:
    - http:
        paths:
{{- if .Values.global.ingress.use_regex }}
        - path: {{ .Values.global.ingress.prefix }}{{ $basePath }}(/|$)(.*)
{{- else }}
        - path: {{ .Values.global.ingress.prefix }}{{ $basePath }}
{{- end }}
          backend: {{- include "ingress.backend" (dict "serviceName" $serviceName "servicePort" $servicePort "context" $) | nindent 12 }}
          {{- if eq "true" (include "ingress.supportsPathType" .) }}
          pathType: ImplementationSpecific
          {{- end }}
{{- if .Values.global.ingress.hostname }}
      host: {{ .Values.global.ingress.hostname }}
{{- end }}
{{- end }}
