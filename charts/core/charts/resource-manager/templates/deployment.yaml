apiVersion: v1
kind: ServiceAccount
metadata:
  name: resource-manager-serviceaccount
  namespace: {{ .Values.Namespace }}
  labels:
    group: {{ .Values.lables.group.value }}
    app: resource-manager
    core: "true"

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ template "resource-manager.fullname" . }}
  labels:
    group: {{ .Values.lables.group.value }}
    app: resource-manager-role
    core: "true"
rules:
- apiGroups: [""]
  resource: ["pods"]
  verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: resource-manager-clusterrole
  namespace: {{ .Values.Namespace }}
  labels:
    group: {{ .Values.lables.group.value }}
    app: {{ template "resource-manager.name" . }}
    core: "true"
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: resource-manager-clusterrolebinding
  namespace: {{ .Values.Namespace }}
  labels:
    group: {{ .Values.lables.group.value }}
    app: {{ template "resource-manager.name" . }}
    core: "true"
subjects:
- kind: ServiceAccount
  name: resource-manager-serviceaccount
roleRef:
  kind: ClusterRole
  name: resource-manager-clusterrole
  apiGroup: rbac.authorization.k8s.io

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "resource-manager.name" . }}
  namespace: {{ .Values.Namespace }}
  labels:
    group: {{ .Values.lables.group.value }}
    app: {{ template "resource-manager.name" . }}
    core: "true"
subjects:
- kind: ServiceAccount
  name: resource-manager-serviceaccount
roleRef:
  kind: Role
  name: {{ template "resource-manager.name" . }}
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "resource-manager.fullname" . }}
  namespace: {{ .Values.Namespace }}
  labels:
    app: {{ template "resource-manager.name" . }}
    chart: {{ template "resource-manager.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    group: {{ .Values.lables.group.value }}
    core: "true"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "resource-manager.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "resource-manager.name" . }}
        group: {{ .Values.lables.group.value }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: NODE_ENV
              value: {{ .Values.env.node_env }}
            - name: METRIC_PORT
              value: "{{ .Values.env.metric_port }}"
            - name: INTERNAL
              value: "{{ .Values.env.internal }}"
            - name: PROMETHEUS_ENDPOINT
              value: {{ .Values.env.promethues_endpoint }}
            - name: JAEGER_AGENT_SERVICE_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
      core: "true"
{{ toYaml . | indent 8 }}
    {{- end }}
      serviceAccountName: resource-manager-serviceaccount
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}